<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sysDepartment">

	<!-- 查询部门列表 start -->
	<select id="queryDepartmentList" parameterType="com.phly.common.base.model.SysDepartmentVO"
		resultType="com.phly.common.base.model.SysDepartmentVO" flushCache="true">
		select t1.ID departmentId,t1.ORG_NAME orgName,(select t.ORG_NAME from sys_department_t t where t.ID = t1.PARTENTID) parentId,
t1.ORG_REMARK orgRemark,t1.CREATE_DATE createDate,t1.CREATOR creator,t1.LAST_UPDATER lastUpdater ,t1.LAST_UPDATE_DATE lastUpdateDate,t1.IS_DEL isDel from 	sys_department_t t1 left join sys_department_t t2
on t2.ID = t1.PARTENTID having t1.IS_DEL = 0 
			<if test="orgName != null and orgName != ''">
				and t2.ORG_NAME like CONCAT('%',#{orgName},'%')
			</if>
			<if test="searchPhrase != null and searchPhrase != ''">
				and (t2.ORG_NAME like CONCAT('%',#{searchPhrase},'%') or t2.ORG_REMARK like CONCAT('%',#{searchPhrase},'%'))
			</if>
			<if test="parentId != null and parentId != ''">
				and t2.PARTENTID = #{parentId}
			</if>
			<if test="sortFieldName != null and sortFieldName != '' and sortType != null and sortType != ''">
				ORDER BY ${sortFieldName} ${sortType}
			</if>
			 <if test="sortFieldName == null or sortFieldName == '' or sortType == null or sortType == ''">
				ORDER BY t1.LAST_UPDATE_DATE DESC
			</if> 
	</select>
	<!-- 查询部门列表 end -->
	
	
	<!-- 查询所有部门,下拉框列表 start -->
	<select id="queryAllDepartment" parameterType="com.phly.common.base.model.SysDepartmentVO"
		resultType="com.phly.common.base.model.SysDepartmentVO">
		select
		  ID departmentId,
		  ORG_NAME orgName,
		  ORG_REMARK orgRemark,
		  IS_DEL isDel,
		  LAST_UPDATE_DATE lastUpdateDate,
		  PARTENTID parentId
		FROM sys_department_t 
	</select>	
	
	<!-- 查询所有部门,下拉框列表 end -->
	
	
	<!-- 查询所有部门数据总条数 start -->
	<select id="getDepartmentCount" parameterType="com.phly.common.base.model.SysDepartmentVO"
		resultType="int" flushCache="true">
		SELECT count(1) FROM sys_department_t t 
	 	<where>
	 		1 = 1 and t.IS_DEL = 0
			<if test="orgName != null and orgName != ''">
				and t.ORG_NAME like CONCAT('%',#{orgName},'%')
				
			</if>
			<if test="searchPhrase != null and searchPhrase != ''">
				and (t.ORG_NAME like CONCAT('%',#{searchPhrase},'%') or t.ORG_REMARK like CONCAT('%',#{searchPhrase},'%'))
			</if>
		</where> 
	</select>
	<!-- 查询所有部门数据总条数 end -->
	
	
	
	<!-- 查询一个部门 start -->
	<select id="getDepartment" parameterType="com.phly.common.base.model.SysDepartmentVO"
		resultType="com.phly.common.base.model.SysDepartmentVO">
		select
		  ID departmentId,
		  ORG_NAME orgName,
		  PARTENTID parentId,
		  ORG_REMARK orgRemark,
		  IS_DEL isDel,
		  LAST_UPDATE_DATE lastUpdateDate
		FROM sys_department_t t 
		<where>
		 1 = 1 and t.IS_DEL = 0
			 <if test="orgName != null and orgName != ''">
				and t.ORG_NAME = #{orgName}
			</if>
			 <if test="departmentId != null and departmentId != ''">
				and t.ID = #{departmentId}
			</if> 
		</where>
	</select>
	<!-- 查询一个部门 end -->
	
	
	<!-- 添加部门信息 start -->
	<insert id="addDepartment" parameterType="com.phly.common.base.model.SysDepartmentVO">
		INSERT INTO sys_department_t
		            (ID,
		             ORG_NAME,
		             PARTENTID,
		             ORG_REMARK,
		             IS_DEL,
		             CREATE_DATE,
		             CREATOR,
		             LAST_UPDATE_DATE,
		             LAST_UPDATER)
		VALUES (UPPER(REPLACE(UUID(),'-','')),
				#{orgName},
				#{parentId},
		        #{orgRemark},
		        #{isDel},
		        #{createDate},
		        #{creator},
		        #{lastUpdateDate},
		        #{lastUpdater}
		        )
	</insert>
	<!-- 添加部门信息 end -->
	
	
	<!-- 修改部门信息 start -->
	<update id="updateDepartment" parameterType="com.phly.common.base.model.SysDepartmentVO">
		UPDATE sys_department_t
		SET 
		  ORG_NAME = #{orgName},
		  PARTENTID = #{parentId},
		  ORG_REMARK = #{orgRemark},
		  IS_DEL = #{isDel}
		WHERE ID = #{departmentId};
	</update>
	<!-- 修改部门信息 end -->
	
	<!-- 删除部门信息 start -->
	<delete id="delDepartment" parameterType="com.phly.common.base.model.SysDepartmentVO">
		UPDATE sys_department_t
		SET 
		  IS_DEL = 1
		WHERE ID = #{departmentId};
	</delete>
	<!-- 删除部门信息 end -->
	
	
	<!-- 查询部门树列表 -->
	<select id="getDepartmentList" parameterType="com.phly.common.base.model.SysDepartmentVO"
		resultType="com.phly.common.base.model.SysDepartmentVO">
		select
		  ID departmentId,
		  ORG_NAME orgName,
		  ORG_REMARK orgRemark,
		  IS_DEL isDel,
		  LAST_UPDATE_DATE lastUpdateDate,
		  PARTENTID parentId
		FROM sys_department_t t where t.is_del = 0 and t.PARTENTID = #{parentId}
	</select>	
</mapper>